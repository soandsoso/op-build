#
# This is free software, lisence use MIT.
#
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
#
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: r619ac

on:
  push:
    tags:
      - v*-619

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: Clone
        run: |
          git clone --depth 1 https://github.com/coolsnowwolf/lede -b master openwrt
          git clone --depth 1 https://github.com/yangsongli/luci-theme-atmaterial.git -b master openwrt/package/lean/luci-theme-atmaterial
          rm ./openwrt/package/lean/luci-theme-atmaterial/files/htdocs/logo.png
          cp ./files/logo.png ./openwrt/package/lean/luci-theme-atmaterial/files/htdocs/logo.png

      - name: Update feeds
        run: |
          cd openwrt
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          cd openwrt
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          #

          #
          # 如果不对本区块做出任何编辑, 则生成默认配置固件.
          #

          # 以下为定制化固件选项和说明:
          #

          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          #
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #

          #
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          #
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          #

          # 编译固件:
          cat >> .config <<EOF
          CONFIG_TARGET_ipq40xx=y
          CONFIG_TARGET_ipq40xx_generic=y
          CONFIG_TARGET_ipq40xx_generic_DEVICE_p2w_r619ac-128m=y
          CONFIG_PACKAGE_6in4=y
          # CONFIG_PACKAGE_UnblockNeteaseMusic is not set
          # CONFIG_PACKAGE_UnblockNeteaseMusicGo is not set
          # CONFIG_PACKAGE_adbyby is not set
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_iperf3=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-sit=y
          # CONFIG_PACKAGE_kmod-tun is not set
          # CONFIG_PACKAGE_libatomic is not set
          # CONFIG_PACKAGE_libcares is not set
          CONFIG_PACKAGE_libevent2=y
          # CONFIG_PACKAGE_libhttp-parser is not set
          # CONFIG_PACKAGE_libminiupnpc is not set
          # CONFIG_PACKAGE_libnatpmp is not set
          # CONFIG_PACKAGE_libnghttp2 is not set
          CONFIG_PACKAGE_libpcap=y
          # CONFIG_PACKAGE_libstdcpp is not set
          # CONFIG_PACKAGE_libuv is not set
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          # CONFIG_PACKAGE_luci-app-filetransfer is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_fuse-utils is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Rust=y
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          # CONFIG_PACKAGE_luci-app-zerotier is not set
          # CONFIG_PACKAGE_luci-lib-fs is not set
          CONFIG_PACKAGE_luci-lib-json=y
          CONFIG_PACKAGE_luci-mod-rpc=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-theme-atmaterial=y
          # CONFIG_PACKAGE_node is not set
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_redsocks2=y
          CONFIG_PACKAGE_shadowsocks-rust-sslocal=y
          CONFIG_PACKAGE_tcpdump=y
          # CONFIG_PACKAGE_vlmcsd is not set
          # CONFIG_PACKAGE_zerotier is not set
          # CONFIG_UnblockNeteaseMusic_Go is not set
          # CONFIG_UnblockNeteaseMusic_NodeJS is not set
          EOF

          #
          # ========================固件定制部分结束========================
          #

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h

      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: find ./openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: op-r619ac
          path: ./openwrt/bin/
